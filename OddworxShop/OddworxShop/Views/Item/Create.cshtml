@model OddworxShop.ViewModels.CreateItemViewModel

@{
    ViewBag.Title = "Create";
}

<div class="container">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        @*@Html.HiddenFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.LastModifiedAt, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.LastModifiedBy, new { htmlAttributes = new { @class = "form-control" } })
            @Html.HiddenFor(model => model.IsActive)*@
        @Html.HiddenFor(model => model.Shop.Id, new { id = "hidden-shop-id" })


        <h5>Add a new item for @Model.Shop.Name</h5>
        <br />
        <div class="form-horizontal">
            @*<hr />*@
            @Html.ValidationSummary(true, "", new { @class = "red-text" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "red-text text-darken-3" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "red-text text-darken-3" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "red-text text-darken-3" })
                </div>
            </div>
            <br />

            <div class="row teal lighten-3" style="padding:12px;">


                @if (Model.Images != null)
                {
                    for (int i = 0; i < 6; i++)
                    {
                        <div class="col">
                            <div class="file-field input-field">
                                <div>
                                    <span id="image-@i"><img src="~/Images/missing-image-232x150.png" class="image-thumbnail-small" /></span>
                                    <input type="file" class="item-image-upload" id="@i">
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" placeholder="Add a picture">
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="ADD" class="btn-small btn-default" />
                    <button class="btn-small btn-default blue-grey lighten-1" id="btn-return-to-item-list">RETURN TO ITEM LIST</button>
                </div>
            </div>
        </div>
            <br />
            }
        </div>

<script>
    $(document).ready(function () {

    });

    $('#btn-return-to-item-list').click(function (e) {
        e.preventDefault();

        var shopId = $('#hidden-shop-id').val();
        window.location = '@Url.Action("ViewItemsByShop", "Item")' + '/?shopId=' + shopId;
    })
</script>

