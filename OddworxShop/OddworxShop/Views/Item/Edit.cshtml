@model OddworxShop.ViewModels.ItemEditViewModel

@{
    ViewBag.Title = "Edit item details";
}

<div class="container">

    <h2>Edit item details</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="row">
                <div class="col s12 m6">
                    <h4>Item</h4>
                </div>
            </div>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @*@Html.HiddenFor(model => model.CreatedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.CreatedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.LastModifiedAt, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.LastModifiedBy, new { htmlAttributes = new { @class = "form-control" } })*@

            <div class="row">
                <div class="form-group col s12 m6">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col s12 m6">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col s12 m6">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col s12 m6">
                    @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div>
                        @Html.CheckBoxFor(model => model.IsActive)
                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row green lighten-5" style="padding:12px;">
                @if (Model.Images != null)
                {

                    for (var i = 0; i < 6; i++)
                    {
                        <div class="col">

                            <div class="file-field input-field">
                                <div>
                                    @if (i < Model.Images.Count())
                                    {
                                        <span><img src="data:image/jpeg;base64,@(Convert.ToBase64String(@Model.Images[i].ImageData))" class="image-thumbnail-small" /></span>
                                        <input type="file" class="item-image-upload">
                                    }
                                    else
                                    {
                                        <span><img src="~/Images/missing-image-232x150.png" class="image-thumbnail-small" /></span>
                                        <input type="file" class="item-image-upload">
                                    }
                                </div>
                                <div class="file-path-wrapper">
                                    <input class="file-path validate" type="text" placeholder="Add a picture">
                                </div>
                            </div>
                        </div>
                    }
                }


            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col s12 m6">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

<script>
    $(document).ready(function () {

        $('.item-image-upload').change(function (e) {
            //var file = this.files[0];


            var fileUpload = this.files[0];
            var files = fileUpload.files;


            // Create FormData object
            var fileData = new FormData();
            fileData.append(fileUpload.name, fileUpload);

            // Looping over all files and add it to FormData object
            //for (var i = 0; i < files.length; i++) {
            //    fileData.append(files[i].name, files[i]);
            //}

            alert(fileUpload.name);

            $.ajax({
                type: 'post',
                url: '@Url.Action("SaveImage","Item")',
                contentType: false, // Not to set any content header
                processData: false,
                data: fileData,
                success: function (response) {
                    alert(response);
                },
                error: function (response) {
                    alert('ERROR: ' + response)
                }
            });
        });
    });
</script>
